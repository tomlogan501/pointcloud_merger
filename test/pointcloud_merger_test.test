<launch>

  <arg name="world_name" default="world/test.world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find pointcloud_merger)/$(arg world_name)"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
/bin/bash: q : commande introuvable
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro '$(find pointcloud_merger)/models/combo.urdf.xacro'" />

    <node name="spawn" pkg="gazebo_ros" type="spawn_model"
        args="-x 0
              -y 0
              -z 0
              -Y 0
              -unpause
              -urdf
              -param robot_description
              -model test" />

<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node pkg="pointcloud_merger" type="pointcloud_merger_node"
      name="pointcloud_merger_node" >

  	<remap from="cloud1" to="/sensor1/depth/points"/>
	<remap from="cloud2" to="/sensor2/depth/points"/>
        <rosparam>
          target_frame: base_link # Leave disabled to output scan in pointcloud frame
        # Concurrency level, affects number of pointclouds queued for processing, thread number governed by nodelet manager
        # 0 : Detect number of cores
        # 1 : Single threaded
        # 2->inf : Parallelism level
          concurrency_level: 0
        </rosparam>
  </node>
  <test  test-name="test" pkg="pointcloud_merger"
  type="pointcloud_merger_test" >
  	<remap from="cloud1" to="/sensor1/depth/points"/>
	<remap from="cloud2" to="/sensor2/depth/points"/>
  </test>

</launch>
